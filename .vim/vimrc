"" Plugins (in separate file)
source ~/.vim/vimrc.plug

"" custom suntax highlighting
source ~/.vim/syntax/picolisp.vim

"" coc.nvim configuration
source ~/.vim/vimrc.coc

"" redefine leader
let mapleader = ','

"" line handling
set wrap
map <leader>lw :set wrap!<cr>

"" selection
set showmatch       " Highlight matching brace
set mouse=a         " Enable mouse

"" searches
set hlsearch        " Highlight all search results
set smartcase       " Enable smart-case search
set ignorecase      " Always case-insensitive
set incsearch       " IncrementalsSearch for strings
nnoremap <leader><space> :nohlsearch<cr>

"" indentation
set autoindent      " Auto-indent new lines
set expandtab       " Use spaces instead of tabs
set shiftwidth=2    " Number of auto-indent spaces
set smartindent     " Enable smart-indent
set smarttab        " Enable smart-tabs
set softtabstop=2   " Number of spaces per Tab
set backspace=indent,eol,start  " Backspace behaviour

"" copy/paste to/from system
"vnoremap <C-y> "*y
"vnoremap <C-c> "*c
"vnoremap <C-p> "*p
"vnoremap <C-Y> "+y
"vnoremap <C-C> "+c
"vnoremap <C-P> "+p

"" system
set ruler           " Show row and column ruler information
set laststatus=2    " Always show status bar
set noeb vb t_vb=   " Removes bell and visual bell effects

"" files
set autochdir       " Change dir according to open file
set nobackup        " do not create backup files
set swapfile        " create swap files to recover from crashes
set undofile        " Save undo file between sessions
set undolevels=1000 " Number of undo levels

"" encoding
set encoding=utf-8

""" dont use arrowkeys
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> :bp!<CR>
noremap <Right> :bn!<CR>

"" really, just dont
inoremap <Up>    <NOP>
inoremap <Down>  <NOP>
inoremap <Left>  <NOP>
inoremap <Right> <NOP>

"" line numbers
set number
map <leader>ln :set nu!<cr>
map <leader>lr :set rnu!<cr>

"" color scheme
set t_Co=256
set background=dark
silent! colorscheme badwolf

"" airline
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'default'
let g:airline_powerline_fonts = 1
let g:airline_theme='badwolf'

"" fuzzy finder
set rtp+=~/.fzf
let $FZF_DEFAULT_COMMAND = 'find * -type f'
map <leader>f. :FZF .<cr>
map <leader>fh :FZF ~<cr>

"" nerdtree
map <c-k>d :NERDTreeToggle<cr>
" close NERDTree after a file is opened
let g:NERDTreeQuitOnOpen = 1

"" tagbar (outline)
map <c-k>t :TagbarToggle<cr>

"" EditorConfig
let g:EditorConfig_exclude_patterns = [
      \ 'fugitive://.\*',
      \ 'scp://.\*',
      \ ]

"" Trigger configuration.
"" Do not use <tab> if you use YouCompleteMe.
let g:UltiSnipsExpandTrigger="<leader><tab>"
"let g:UltiSnipsJumpForwardTrigger="<c-f>"
"let g:UltiSnipsJumpBackwardTrigger="<c-b>"

"" YCM configuration
"source ~/.vim/vimrc.ycm

"" LSP configuration
"source ~/.vim/vimrc.lsp

"" ALE configuration
"source ~/.vim/vimrc.ale

"" LSC configuration
"source ~/.vim/vimrc.lsc

augroup PicolispREPL
  au!
  au FileType picolisp let b:repl_program='pil +'
  au FileType picolisp let b:repl_cd_prefix='(cd "'
  au FileType picolisp let b:repl_cd_suffix='")'
  au FileType picolisp let b:repl_run_prefix='(load "'
  au FileType picolisp let b:repl_run_suffix='")'
  au FileType picolisp let b:repl_send_text_delay='50m'
"  au FileType picolisp let b:repl_send_prefix="%cpaste\n"
"  au FileType picolisp let b:repl_send_suffix="\n--\n"
augroup END
